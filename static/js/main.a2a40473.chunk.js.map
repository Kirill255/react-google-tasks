{"version":3,"sources":["components/LoginButton/LoginButton.js","containers/LoginPage/LoginPage.js","components/TaskLists/TaskLists.js","components/Task/Task.js","components/Tasks/Tasks.js","components/TaskListModal/TaskListModal.js","components/TaskModal/TaskModal.js","components/About/About.js","api/tasks.js","containers/TasksPage/TasksPage.js","components/Loader/Loader.js","api/auth.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["LoginButton","_ref","handleSignInClick","react_default","a","createElement","className","onClick","LoginPage","components_LoginButton_LoginButton","TaskLists","state","anchorEl","openedMenuIdOfTaskList","handleListTasksOfList","id","title","event","_this","props","listTasksOfList","handleMenuClick","setState","currentTarget","handleMenuClose","handleDeleteTaskList","deleteTaskList","handleUpdateTaskList","handleUTaskList","_this2","this","List_default","subheader","ListSubheader_default","component","taskLists","map","taskList","ListItem_default","button","key","style","backgroundColor","selectedTaskListId","ListItemIcon_default","ViewList_default","ListItemText_default","primary","ListItemSecondaryAction_default","IconButton_default","aria-owns","undefined","aria-haspopup","MoreVert_default","Menu_default","open","Boolean","onClose","MenuItem_default","handleModalOpen","Add_default","Divider_default","getAbout","Info_default","window","index_es","Component","Task","checked","handleToggle","status","newStatus","handleTaskComplete","handleUpdateTask","handleUTask","handleDeleteTask","deleteTask","dense","disableGutters","divider","textDecoration","Checkbox_default","onChange","tabIndex","disableRipple","disabled","isRequest","disableTypography","Typography_default","variant","gutterBottom","color","notes","due","Chip_default","icon","DateRange_default","label","Edit_default","Delete_default","Tasks","Card_default","raised","CardHeader_default","action","AddCircleOutline_default","tasks","length","task","Task_Task_Task","Fragment","CardContent_default","align","CardActions_default","Button_default","TaskListModal","handleClose","onCancel","handleSubmit","onSubmit","handleKeyUp","keyCode","preventDefault","stopPropagation","onChangeTitle","target","value","_this$props","isModalOpen","isUpdate","taskListTitle","Dialog_default","fullWidth","DialogTitle_default","concat","DialogContent_default","DialogContentText_default","TextField_default","autoComplete","autoFocus","margin","type","onKeyUp","DialogActions_default","TaskModal","handleDateChange","date","onChangeNote","taskTitle","multiline","rowsMax","material_ui_pickers_esm","utils","DateFnsUtils","clearable","format","minDate","Date","taskNotes","taskDue","About","paragraph","api_tasks","Promise","resolve","reject","gapi","client","tasklists","list","maxResults","then","response","result","items","catch","taskListId","get","tasklist","taskId","showHidden","insert","newTaskList","update","updatedTaskList","delete","Object","objectSpread","newTask","updatedTask","TasksPage","selectedTaskListTitle","isModalTaskOpen","updatedTaskListId","updatedTaskId","isAbout","notification","handleModalClose","handleModalTaskOpen","handleModalTaskClose","listTaskLists","_callee","regenerator_default","wrap","_context","prev","next","apiTasks","sent","t0","console","log","stop","taskListById","_callee2","_context2","taskById","_callee3","_context3","_callee4","_context4","handleCUTaskList","updateTaskList","createNewTaskList","handleCUTaskListCancel","_callee5","_context5","showNotification","_callee6","_context6","_callee7","_context7","handleCUTask","keys","updateTask","createNewTask","handleCUTaskCancel","_callee8","newTasks","_context8","toConsumableArray","_callee9","_context9","_callee10","_context10","filter","_callee11","notifText","_context11","completeTask","message","autoHideDuration","arguments","timer","clearTimeout","setTimeout","CssBaseline_default","AppBar_default","position","Toolbar_default","noWrap","handleSignoutClick","Drawer_default","classes","paper","anchor","components_TaskLists_TaskLists","components_Tasks_Tasks","components_About_About","Paper_default","padding","elevation","TaskListModal_TaskListModal","TaskModal_TaskModal","Snackbar_default","anchorOrigin","vertical","horizontal","Loader","Auth","init","apiKey","discoveryDocs","clientId","scope","classPrivateFieldLooseBase","_authInstance","auth2","getAuthInstance","isSignedIn","signIn","signOut","auth","App","loading","isAuthenticated","checkInitClient","apiAuth","initClient","listen","updateSigninStatus","load","components_Loader_Loader","TasksPage_TasksPage_TasksPage","containers_LoginPage_LoginPage","location","hostname","match","ReactDOM","render","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2a40473.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./LoginButton.css\";\n\nconst LoginButton = ({ handleSignInClick }) => {\n  return (\n    <div className=\"login__button\" onClick={handleSignInClick}>\n      <span className=\"login__button_icon\" />\n      <span className=\"login__button_text\">Google</span>\n    </div>\n  );\n};\n\nexport default LoginButton;\n","import React from \"react\";\n\nimport LoginButton from \"../../components/LoginButton/LoginButton\";\n\nimport \"./LoginPage.css\";\n\nconst LoginPage = ({ handleSignInClick }) => {\n  return (\n    <div className=\"login__page\">\n      <h1>Your Google Tasks!</h1>\n      <div className=\"login__form\">\n        <h2>Please, Login In!</h2>\n        <LoginButton handleSignInClick={handleSignInClick} />\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React, { Component } from \"react\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ViewList from \"@material-ui/icons/ViewList\";\nimport Info from \"@material-ui/icons/Info\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { GithubCircle, CalendarCheck } from \"mdi-material-ui\";\n\nimport \"./TaskLists.css\";\n\nclass TaskLists extends Component {\n  state = {\n    anchorEl: null,\n    openedMenuIdOfTaskList: null\n  };\n\n  handleListTasksOfList = (id, title) => (event) => {\n    this.props.listTasksOfList(id, title);\n  };\n\n  handleMenuClick = (id) => (event) => {\n    this.setState({ anchorEl: event.currentTarget, openedMenuIdOfTaskList: id });\n  };\n\n  handleMenuClose = (event) => {\n    this.setState({ anchorEl: null, openedMenuIdOfTaskList: null });\n  };\n\n  handleDeleteTaskList = (event) => {\n    this.props.deleteTaskList(this.state.openedMenuIdOfTaskList);\n    this.handleMenuClose();\n  };\n\n  handleUpdateTaskList = (event) => {\n    this.props.handleUTaskList(this.state.openedMenuIdOfTaskList);\n    this.handleMenuClose();\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n\n    return (\n      <div>\n        <List subheader={<ListSubheader component=\"div\">Task Lists</ListSubheader>}>\n          {this.props.taskLists.map((taskList) => (\n            <ListItem\n              button\n              key={taskList.id}\n              onClick={this.handleListTasksOfList(taskList.id, taskList.title)}\n              style={{\n                backgroundColor:\n                  this.props.selectedTaskListId === taskList.id && \"rgba(0, 0, 0, 0.08)\"\n              }}\n            >\n              <ListItemIcon>\n                <ViewList />\n              </ListItemIcon>\n              <ListItemText primary={taskList.title} />\n\n              <ListItemSecondaryAction>\n                <IconButton\n                  aria-owns={anchorEl ? \"simple-menu\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenuClick(taskList.id)}\n                >\n                  <MoreVertIcon />\n                </IconButton>\n\n                <Menu\n                  id=\"simple-menu\"\n                  anchorEl={anchorEl}\n                  open={Boolean(anchorEl)}\n                  onClose={this.handleMenuClose}\n                >\n                  <MenuItem onClick={this.handleUpdateTaskList}>Update</MenuItem>\n                  <MenuItem onClick={this.handleDeleteTaskList}>Delete</MenuItem>\n                </Menu>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n\n          <ListItem button key={\"Create new list\"} onClick={this.props.handleModalOpen}>\n            <ListItemIcon>\n              <AddIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Create new list\"} />\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem button key={\"About\"} onClick={this.props.getAbout}>\n            <ListItemIcon>\n              <Info />\n            </ListItemIcon>\n            <ListItemText primary={\"About\"} />\n          </ListItem>\n          <ListItem\n            button\n            key={\"View Source on GitHub\"}\n            onClick={() => window.open(\"https://github.com/Kirill255/react-google-tasks\")}\n          >\n            <ListItemIcon>\n              <GithubCircle />\n            </ListItemIcon>\n            <ListItemText primary={\"View Source on GitHub\"} />\n          </ListItem>\n          <ListItem\n            button\n            key={\"Original Site\"}\n            onClick={() => window.open(\"https://mail.google.com/tasks/canvas?pli=1\")}\n          >\n            <ListItemIcon>\n              <CalendarCheck />\n            </ListItemIcon>\n            <ListItemText primary={\"Original Site\"} />\n          </ListItem>\n        </List>\n      </div>\n    );\n  }\n}\n\nexport default TaskLists;\n","import React, { Component } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Delete from \"@material-ui/icons/Delete\";\n\nimport \"./Task.css\";\n\nexport default class Task extends Component {\n  state = {\n    checked: [0]\n  };\n\n  handleToggle = (id, status) => () => {\n    const newStatus = status === \"completed\" ? \"needsAction\" : \"completed\";\n    this.props.handleTaskComplete(id, newStatus);\n  };\n\n  handleUpdateTask = (id) => () => {\n    this.props.handleUTask(id);\n  };\n\n  handleDeleteTask = (id) => () => {\n    this.props.deleteTask(id);\n  };\n\n  render() {\n    return (\n      <ListItem\n        className=\"task__item\"\n        dense\n        disableGutters\n        divider\n        style={{ textDecoration: this.props.status === \"completed\" ? \"line-through\" : null }}\n      >\n        <Checkbox\n          onChange={this.handleToggle(this.props.id, this.props.status)}\n          checked={this.props.status === \"completed\"}\n          tabIndex={-1}\n          disableRipple\n          disabled={this.props.isRequest}\n        />\n        <ListItemText disableTypography className=\"task__item_text\">\n          <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\n            {this.props.title}\n          </Typography>\n          {this.props.notes && (\n            <Typography gutterBottom color=\"textSecondary\">\n              {this.props.notes}\n            </Typography>\n          )}\n          {this.props.due && (\n            <Chip\n              icon={<DateRange />}\n              label={this.props.due}\n              className=\"task__item_chip\"\n              variant=\"outlined\"\n            />\n          )}\n        </ListItemText>\n        <ListItemSecondaryAction>\n          <IconButton onClick={this.handleUpdateTask(this.props.id)}>\n            <Edit />\n          </IconButton>\n          <IconButton onClick={this.handleDeleteTask(this.props.id)}>\n            <Delete />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleOutline from \"@material-ui/icons/AddCircleOutline\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Task from \"../Task/Task\";\n\nimport \"./Tasks.css\";\n\nclass Tasks extends Component {\n  render() {\n    return (\n      <div>\n        <Card className=\"tasks__card\" raised>\n          <CardHeader\n            title={this.props.title}\n            action={\n              <IconButton onClick={() => this.props.handleModalOpen()}>\n                <AddCircleOutline />\n              </IconButton>\n            }\n          />\n          {this.props.tasks.length ? (\n            <List className=\"tasks__list\">\n              {this.props.tasks.map((task) => (\n                <Task\n                  key={task.id}\n                  id={task.id}\n                  title={task.title}\n                  notes={task.notes ? task.notes : null}\n                  due={task.due ? task.due : null}\n                  status={task.status}\n                  handleUTask={this.props.handleUTask}\n                  deleteTask={this.props.deleteTask}\n                  handleTaskComplete={this.props.handleTaskComplete}\n                  isRequest={this.props.isRequest}\n                />\n              ))}\n            </List>\n          ) : (\n            <>\n              <CardContent>\n                <Typography align=\"center\" variant=\"h5\">\n                  No tasks of this list yet.\n                </Typography>\n              </CardContent>\n            </>\n          )}\n          <CardActions>\n            <Button\n              className=\"tasks__add-button\"\n              color=\"primary\"\n              onClick={() => this.props.handleModalOpen()}\n            >\n              <AddCircleOutline className=\"tasks__add-button_icon\" />\n              Create Task\n            </Button>\n          </CardActions>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Tasks;\n//  {/* \"No tasks of this list found\" */}\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default class TaskListModal extends Component {\n  state = { title: \"\" };\n\n  handleClose = () => {\n    this.props.onCancel();\n    this.setState({ title: \"\" });\n  };\n\n  handleSubmit = () => {\n    this.props.onSubmit(this.state.title);\n    this.setState({ title: \"\" });\n  };\n\n  handleKeyUp = (event) => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.handleSubmit();\n    }\n  };\n\n  onChangeTitle = (event) => {\n    this.setState({ title: event.target.value });\n  };\n\n  render() {\n    const { isModalOpen, isUpdate, taskListTitle } = this.props;\n    const value = isUpdate && !this.state.title ? taskListTitle : this.state.title;\n\n    return (\n      <div>\n        <Dialog open={isModalOpen} onClose={this.handleClose} fullWidth>\n          <DialogTitle id=\"form-dialog-title\">\n            {isUpdate ? `Update ${taskListTitle}` : \"Create new task list\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>Enter a title for the task list.</DialogContentText>\n            <TextField\n              autoComplete=\"off\"\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Task list title\"\n              type=\"text\"\n              value={value}\n              onChange={this.onChangeTitle}\n              onKeyUp={this.handleKeyUp}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              {isUpdate ? \"Update\" : \"Create\"}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"material-ui-pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport default class TaskModal extends Component {\n  state = {\n    title: \"\",\n    notes: \"\",\n    due: null\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    // проверяю я только title, остальные параметры необязательные\n    if (props.isUpdate) {\n      if (props.taskTitle && !state.title) {\n        return {\n          title: props.taskTitle,\n          notes: props.taskNotes || \"\",\n          due: props.taskDue || null\n        };\n      }\n    }\n\n    return null;\n  }\n\n  handleDateChange = (date) => {\n    this.setState({ due: date });\n  };\n\n  handleClose = () => {\n    this.props.onCancel();\n    this.setState({ title: \"\", notes: \"\", due: null });\n  };\n\n  handleSubmit = () => {\n    if (this.state.title) {\n      this.props.onSubmit(this.state);\n      this.setState({ title: \"\", notes: \"\", due: null });\n    }\n  };\n\n  handleKeyUp = (event) => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.handleSubmit();\n    }\n  };\n\n  onChangeTitle = (event) => {\n    this.setState({ title: event.target.value });\n  };\n\n  onChangeNote = (event) => {\n    this.setState({ notes: event.target.value });\n  };\n\n  render() {\n    const { isModalOpen, isUpdate } = this.props;\n\n    return (\n      <div>\n        <Dialog open={isModalOpen} onClose={this.handleClose} fullWidth>\n          <DialogTitle id=\"form-dialog-title\">\n            {isUpdate ? `Update ${this.props.taskTitle}` : \"Create new task\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>Enter a title for the task. It's required.</DialogContentText>\n            <TextField\n              autoComplete=\"off\"\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Title\"\n              type=\"text\"\n              value={this.state.title}\n              onChange={this.onChangeTitle}\n              onKeyUp={this.handleKeyUp}\n              fullWidth\n            />\n            <TextField\n              autoComplete=\"off\"\n              margin=\"dense\"\n              id=\"notes\"\n              label=\"Notes\"\n              type=\"text\"\n              value={this.state.notes}\n              onChange={this.onChangeNote}\n              fullWidth\n              multiline\n              rowsMax=\"4\"\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <DatePicker\n                margin=\"dense\"\n                label=\"Date\"\n                clearable\n                format=\"dd/MM/yyyy\"\n                minDate={new Date()}\n                value={this.state.due}\n                onChange={this.handleDateChange}\n              />\n            </MuiPickersUtilsProvider>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              {isUpdate ? \"Update\" : \"Create\"}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst About = () => {\n  return (\n    <div>\n      <Card className=\"tasks__card\" raised>\n        <CardHeader title=\"About\" />\n\n        <CardContent>\n          <Typography align=\"center\" paragraph>\n            Awesome Google Tasks is an alternative web client for Google Tasks.\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default About;\n","class Tasks {\n  /*\n   ** All\n   */\n\n  listTaskLists() {\n    return new Promise((resolve, reject) => {\n      return window.gapi.client.tasks.tasklists\n        .list({\n          maxResults: 10\n        })\n        .then((response) => {\n          const taskLists = response.result.items;\n          resolve(taskLists);\n        })\n        .catch(reject);\n    });\n  }\n\n  taskListById(taskListId) {\n    return new Promise((resolve, reject) => {\n      return window.gapi.client.tasks.tasklists\n        .get({\n          tasklist: taskListId\n        })\n        .then((response) => {\n          const taskList = response.result;\n          resolve(taskList);\n        })\n        .catch(reject);\n    });\n  }\n\n  taskById(taskListId, taskId) {\n    return new Promise((resolve, reject) => {\n      return window.gapi.client.tasks.tasks\n        .get({\n          tasklist: taskListId,\n          task: taskId\n        })\n        .then((response) => {\n          const task = response.result;\n          resolve(task);\n        })\n        .catch(reject);\n    });\n  }\n\n  listTasksOfList(taskListId) {\n    return new Promise((resolve, reject) => {\n      return window.gapi.client.tasks.tasks\n        .list({\n          tasklist: taskListId,\n          showHidden: true\n        })\n        .then((response) => {\n          const tasks = response.result.items;\n          resolve(tasks);\n        })\n        .catch(reject);\n    });\n  }\n\n  /*\n   ** TaskList\n   */\n\n  createNewTaskList(title) {\n    return new Promise((resolve, reject) => {\n      return window.gapi.client.tasks.tasklists\n        .insert({\n          title\n        })\n        .then((response) => {\n          const newTaskList = response.result;\n          resolve(newTaskList);\n        })\n        .catch(reject);\n    });\n  }\n\n  updateTaskList(taskListId, title) {\n    return new Promise((resolve, reject) => {\n      return window.gapi.client.tasks.tasklists\n        .update({\n          tasklist: taskListId,\n          id: taskListId,\n          title\n        })\n        .then((response) => {\n          const updatedTaskList = response.result;\n          resolve(updatedTaskList);\n        })\n        .catch(reject);\n    });\n  }\n\n  deleteTaskList(taskListId) {\n    return new Promise((resolve, reject) => {\n      return window.gapi.client.tasks.tasklists\n        .delete({\n          tasklist: taskListId\n        })\n        .then((response) => {\n          const result = response.result;\n          resolve(result);\n        })\n        .catch(reject);\n    });\n  }\n\n  /*\n   ** Task\n   */\n\n  createNewTask(taskListId, task) {\n    return new Promise((resolve, reject) => {\n      return window.gapi.client.tasks.tasks\n        .insert({\n          tasklist: taskListId,\n          ...task\n        })\n        .then((response) => {\n          const newTask = response.result;\n          resolve(newTask);\n        })\n        .catch(reject);\n    });\n  }\n\n  updateTask(taskListId, taskId, task) {\n    return new Promise((resolve, reject) => {\n      return window.gapi.client.tasks.tasks\n        .update({\n          tasklist: taskListId,\n          task: taskId,\n          id: taskId,\n          ...task\n        })\n        .then((response) => {\n          const updatedTask = response.result;\n          resolve(updatedTask);\n        })\n        .catch(reject);\n    });\n  }\n\n  deleteTask(taskListId, taskId) {\n    return new Promise((resolve, reject) => {\n      return window.gapi.client.tasks.tasks\n        .delete({\n          tasklist: taskListId,\n          task: taskId\n        })\n        .then((response) => {\n          const result = response.result;\n          resolve(result);\n        })\n        .catch(reject);\n    });\n  }\n\n  completeTask(taskListId, taskId, status) {\n    return new Promise((resolve, reject) => {\n      return window.gapi.client.tasks.tasks\n        .update({\n          tasklist: taskListId,\n          task: taskId,\n          id: taskId,\n          status\n        })\n        .then((response) => {\n          const updatedTask = response.result;\n          resolve(updatedTask);\n        })\n        .catch(reject);\n    });\n  }\n}\n\nexport default new Tasks();\n","import React, { Component } from \"react\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport TaskLists from \"../../components/TaskLists/TaskLists\";\nimport Tasks from \"../../components/Tasks/Tasks\";\nimport TaskListModal from \"../../components/TaskListModal/TaskListModal\";\nimport TaskModal from \"../../components/TaskModal/TaskModal\";\nimport About from \"../../components/About/About\";\n\nimport apiTasks from \"../../api/tasks\";\n\nimport \"./TasksPage.css\";\n\nexport default class TasksPage extends Component {\n  state = {\n    selectedTaskListId: null,\n    selectedTaskListTitle: \"\",\n    taskLists: [],\n    tasks: [],\n    isModalOpen: false,\n    isModalTaskOpen: false,\n    taskListTitle: \"\",\n    taskTitle: \"\",\n    taskNotes: \"\",\n    taskDue: null,\n    updatedTaskListId: null,\n    updatedTaskId: null,\n    isRequest: false,\n    isAbout: false,\n    notification: null\n  };\n\n  componentDidMount() {\n    this.listTaskLists();\n  }\n\n  handleModalOpen = () => {\n    this.setState({ isModalOpen: true });\n  };\n\n  handleModalClose = () => {\n    this.setState({ isModalOpen: false });\n  };\n\n  handleModalTaskOpen = () => {\n    this.setState({ isModalTaskOpen: true });\n  };\n\n  handleModalTaskClose = () => {\n    this.setState({ isModalTaskOpen: false });\n  };\n\n  /*\n   ** All\n   */\n\n  listTaskLists = async () => {\n    try {\n      const taskLists = await apiTasks.listTaskLists();\n\n      if (taskLists && taskLists.length > 0) {\n        this.setState({ taskLists });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  taskListById = async (taskListId) => {\n    try {\n      const taskList = await apiTasks.taskListById(taskListId);\n\n      if (taskList && taskList.id) {\n        this.setState({\n          isModalOpen: true, // open modal after receiving the response\n          updatedTaskListId: taskList.id,\n          taskListTitle: taskList.title\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  taskById = async (taskId) => {\n    try {\n      const task = await apiTasks.taskById(this.state.selectedTaskListId, taskId);\n\n      if (task && task.id) {\n        this.setState({\n          isModalTaskOpen: true, // open modal after receiving the response\n          updatedTaskId: task.id,\n          taskTitle: task.title,\n          taskNotes: task.notes || \"\",\n          taskDue: task.due || null\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // ???????????????\n  listTasksOfList = async (taskListId, title) => {\n    try {\n      const tasks = await apiTasks.listTasksOfList(taskListId);\n\n      if (tasks && tasks.length > 0) {\n        this.setState({\n          tasks,\n          selectedTaskListId: taskListId,\n          selectedTaskListTitle: title,\n          isRequest: false,\n          isAbout: false\n        });\n      } else {\n        this.setState({\n          tasks: [],\n          selectedTaskListId: taskListId,\n          selectedTaskListTitle: title,\n          isRequest: false,\n          isAbout: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  /*\n   ** TaskList\n   */\n\n  // CU - create-update\n  handleCUTaskList = (title) => {\n    this.handleModalClose();\n    if (title) {\n      if (this.state.updatedTaskListId) {\n        this.updateTaskList(this.state.updatedTaskListId, title);\n      } else {\n        this.createNewTaskList(title);\n      }\n    }\n  };\n\n  handleCUTaskListCancel = () => {\n    this.handleModalClose();\n    this.setState({ taskListTitle: \"\", updatedTaskListId: null });\n  };\n\n  createNewTaskList = async (title) => {\n    try {\n      const newTaskList = await apiTasks.createNewTaskList(title);\n\n      if (newTaskList && newTaskList.id) {\n        this.showNotification(\"List created successfuly\");\n\n        this.listTaskLists();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // U - update\n  handleUTaskList = (id) => {\n    // this.setState({ isModalOpen: true }); //it will be better to open the modal after receiving the response\n    this.taskListById(id);\n  };\n\n  updateTaskList = async (taskListId, title) => {\n    try {\n      const updatedTaskList = await apiTasks.updateTaskList(taskListId, title);\n\n      this.setState({\n        taskListTitle: \"\",\n        updatedTaskListId: null,\n        selectedTaskListTitle: updatedTaskList.title\n      });\n\n      if (updatedTaskList && updatedTaskList.id) {\n        this.showNotification(\"List updated successfuly\");\n\n        this.listTaskLists();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  deleteTaskList = async (taskListId) => {\n    try {\n      const result = await apiTasks.deleteTaskList(taskListId); // If successful, this method returns an empty response body.\n\n      if (!result) {\n        if (taskListId === this.state.selectedTaskListId) {\n          this.setState({ selectedTaskListTitle: \"\", selectedTaskListId: null });\n        }\n        this.showNotification(\"List removed successfuly\");\n\n        this.listTaskLists();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  /*\n   ** Task\n   */\n\n  handleCUTask = (task) => {\n    this.handleModalTaskClose();\n    if (Object.keys(task).length) {\n      if (this.state.updatedTaskId) {\n        this.updateTask(this.state.updatedTaskId, task);\n      } else {\n        this.createNewTask(task);\n      }\n    }\n  };\n\n  handleCUTaskCancel = () => {\n    this.handleModalTaskClose();\n    this.setState({ taskTitle: \"\", taskNotes: \"\", taskDue: null, updatedTaskId: null });\n  };\n\n  createNewTask = async (task) => {\n    try {\n      const newTask = await apiTasks.createNewTask(this.state.selectedTaskListId, task);\n\n      if (newTask && newTask.id) {\n        this.showNotification(\"Task created successfuly\");\n\n        const newTasks = [newTask, ...this.state.tasks];\n        this.setState({ tasks: newTasks });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleUTask = (id) => {\n    this.taskById(id);\n  };\n\n  updateTask = async (taskId, task) => {\n    this.setState({ taskTitle: \"\", taskNotes: \"\", taskDue: null, updatedTaskId: null }); // обнуляю перед запросом, иначе у меня приходят старые пропсы в TaskModal\n\n    try {\n      const updatedTask = await apiTasks.updateTask(this.state.selectedTaskListId, taskId, task);\n      // this.setState({ taskTitle: \"\", taskNotes: \"\", taskDue: null, updatedTaskId: null });\n\n      if (updatedTask && updatedTask.id) {\n        this.showNotification(\"Task updated successfuly\");\n\n        this.listTasksOfList(this.state.selectedTaskListId, this.state.selectedTaskListTitle);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  deleteTask = async (taskId) => {\n    try {\n      const result = await apiTasks.deleteTask(this.state.selectedTaskListId, taskId); // If successful, this method returns an empty response body.\n\n      if (!result) {\n        this.showNotification(\"Task removed successfuly\");\n\n        const newTasks = this.state.tasks.filter((task) => task.id !== taskId);\n        this.setState({ tasks: newTasks });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleTaskComplete = async (taskId, status) => {\n    this.setState({ isRequest: true });\n\n    try {\n      const updatedTask = await apiTasks.completeTask(\n        this.state.selectedTaskListId,\n        taskId,\n        status\n      );\n\n      // this.setState({ isRequest: false }); // перенёс в listTasksOfList\n\n      if (updatedTask && updatedTask.id) {\n        const notifText = status === \"completed\" ? \"completed\" : \"not completed\";\n        this.showNotification(`Task ${notifText}`);\n\n        this.listTasksOfList(this.state.selectedTaskListId, this.state.selectedTaskListTitle);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  getAbout = () => {\n    this.setState({ isAbout: true, selectedTaskListId: null });\n  };\n\n  showNotification = (message, autoHideDuration = 3000) => {\n    if (this.timer) clearTimeout(this.timer);\n\n    this.setState({ notification: { message } }, () => {\n      this.timer = setTimeout(() => this.setState({ notification: null }), autoHideDuration);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"tasks__page\">\n        <CssBaseline />\n        <AppBar position=\"fixed\" className=\"tasks__app-bar\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap className=\"tasks__app-name\">\n              Google Tasks\n            </Typography>\n            <Button id=\"signout_button\" color=\"inherit\" onClick={this.props.handleSignoutClick}>\n              Sign Out\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className=\"tasks__drawer\"\n          variant=\"permanent\"\n          classes={{\n            paper: \"tasks__drawer-paper\"\n          }}\n          anchor=\"left\"\n        >\n          <div className=\"tasks__toolbar\" />\n          <Divider />\n\n          <TaskLists\n            taskLists={this.state.taskLists}\n            selectedTaskListId={this.state.selectedTaskListId}\n            listTasksOfList={this.listTasksOfList}\n            handleModalOpen={this.handleModalOpen}\n            handleUTaskList={this.handleUTaskList}\n            deleteTaskList={this.deleteTaskList}\n            getAbout={this.getAbout}\n          />\n        </Drawer>\n        <main className=\"tasks__content\">\n          <div className=\"tasks__toolbar\" />\n\n          {this.state.selectedTaskListId ? (\n            <Tasks\n              tasks={this.state.tasks}\n              title={this.state.selectedTaskListTitle}\n              handleModalOpen={this.handleModalTaskOpen}\n              handleUTask={this.handleUTask}\n              deleteTask={this.deleteTask}\n              handleTaskComplete={this.handleTaskComplete}\n              isRequest={this.state.isRequest}\n            />\n          ) : this.state.isAbout ? (\n            <About />\n          ) : (\n            <Paper style={{ padding: \"8px\" }} elevation={1}>\n              <Typography variant=\"h5\" component=\"h3\">\n                Select task list or create new.\n              </Typography>\n            </Paper>\n          )}\n        </main>\n\n        <TaskListModal\n          isModalOpen={this.state.isModalOpen}\n          isUpdate={Boolean(this.state.updatedTaskListId)}\n          taskListTitle={Boolean(this.state.updatedTaskListId) ? this.state.taskListTitle : \"\"}\n          onCancel={this.handleCUTaskListCancel}\n          onSubmit={this.handleCUTaskList}\n        />\n\n        <TaskModal\n          isModalOpen={this.state.isModalTaskOpen}\n          isUpdate={Boolean(this.state.updatedTaskId)}\n          taskTitle={Boolean(this.state.updatedTaskId) ? this.state.taskTitle : \"\"}\n          taskNotes={Boolean(this.state.updatedTaskId) ? this.state.taskNotes : \"\"}\n          taskDue={Boolean(this.state.updatedTaskId) ? this.state.taskDue : null}\n          onCancel={this.handleCUTaskCancel}\n          onSubmit={this.handleCUTask}\n        />\n\n        {this.state.notification && (\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"left\"\n            }}\n            open={true}\n            message={this.state.notification.message}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./Loader.css\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <h2>Loading ...</h2>\n    </div>\n  );\n};\n\nexport default Loader;\n","class Auth {\n  #authInstance = null;\n\n  initClient() {\n    return new Promise((resolve, reject) => {\n      return window.gapi.client\n        .init({\n          apiKey: \"AIzaSyDKvF1KEk7XllLfpfhbgv1MmcxaSVgWyeA\",\n          discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/tasks/v1/rest\"],\n          clientId: \"365243747034-8bogar38jdern567eimmvs48qqpc7ebi.apps.googleusercontent.com\",\n          scope: \"https://www.googleapis.com/auth/tasks\"\n        })\n        .then(() => {\n          this.#authInstance = window.gapi.auth2.getAuthInstance();\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n\n  get auth2() {\n    return this.#authInstance;\n  }\n\n  isSignedIn() {\n    return this.#authInstance.isSignedIn.get();\n  }\n\n  signIn() {\n    return this.#authInstance.signIn().catch(() => {});\n  }\n\n  signOut() {\n    return this.#authInstance.signOut().catch(() => {});\n  }\n}\n\nexport default new Auth();\n","import React, { Component } from \"react\";\n\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport TasksPage from \"../TasksPage/TasksPage\";\nimport Loader from \"../../components/Loader/Loader\";\n\nimport apiAuth from \"../../api/auth\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    loading: true,\n    isAuthenticated: false\n  };\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", this.checkInitClient);\n  }\n\n  checkInitClient = () => {\n    apiAuth.initClient().then(() => {\n      apiAuth.auth2.isSignedIn.listen(this.updateSigninStatus);\n      this.updateSigninStatus(apiAuth.isSignedIn());\n    });\n  };\n\n  updateSigninStatus = (isSignedIn) => {\n    if (isSignedIn) {\n      this.setState({ loading: false, isAuthenticated: true });\n    } else {\n      this.setState({ loading: false, isAuthenticated: false });\n    }\n  };\n\n  handleSignInClick = () => {\n    apiAuth.signIn();\n  };\n\n  handleSignoutClick = () => {\n    apiAuth.signOut();\n  };\n\n  render() {\n    if (this.state.loading) {\n      return <Loader />;\n    }\n\n    return (\n      <div className=\"App\">\n        {!this.state.isAuthenticated ? (\n          <LoginPage handleSignInClick={this.handleSignInClick} />\n        ) : (\n          <TasksPage handleSignoutClick={this.handleSignoutClick} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}