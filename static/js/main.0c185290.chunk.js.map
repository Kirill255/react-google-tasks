{"version":3,"sources":["components/LoginButton/LoginButton.js","containers/LoginPage/LoginPage.js","components/TaskLists/TaskLists.js","components/Task/Task.js","components/Tasks/Tasks.js","components/TaskListModal/TaskListModal.js","components/TaskModal/TaskModal.js","components/About/About.js","containers/TasksPage/TasksPage.js","components/Loader/Loader.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["LoginButton","_ref","handleSignInClick","react_default","a","createElement","className","onClick","LoginPage","components_LoginButton_LoginButton","TaskLists","state","anchorEl","openedMenuIdOfTaskList","handleListTasksOfList","id","title","event","_this","props","listTasksOfList","handleMenuClick","setState","currentTarget","handleMenuClose","handleDeleteTaskList","deleteTaskList","handleUpdateTaskList","handleUTaskList","_this2","this","List_default","subheader","ListSubheader_default","component","taskLists","map","taskList","ListItem_default","button","key","style","backgroundColor","selectedTaskListId","ListItemIcon_default","ViewList_default","ListItemText_default","primary","ListItemSecondaryAction_default","IconButton_default","aria-owns","undefined","aria-haspopup","MoreVert_default","Menu_default","open","Boolean","onClose","MenuItem_default","handleModalOpen","Add_default","Divider_default","getAbout","Info_default","window","index_es","Component","Task","checked","handleToggle","status","newStatus","handleTaskComplete","handleUpdateTask","handleUTask","handleDeleteTask","deleteTask","dense","disableGutters","divider","textDecoration","Checkbox_default","onChange","tabIndex","disableRipple","disabled","isRequest","disableTypography","Typography_default","variant","gutterBottom","color","notes","due","Chip_default","icon","DateRange_default","label","Edit_default","Delete_default","Tasks","Card_default","raised","CardHeader_default","action","AddCircleOutline_default","tasks","length","task","Task_Task_Task","Fragment","CardContent_default","align","CardActions_default","Button_default","TaskListModal","handleClose","onCancel","handleSubmit","onSubmit","handleKeyUp","keyCode","preventDefault","stopPropagation","onChangeTitle","target","value","_this$props","isModalOpen","isUpdate","taskListTitle","Dialog_default","fullWidth","DialogTitle_default","concat","DialogContent_default","DialogContentText_default","TextField_default","autoComplete","autoFocus","margin","type","onKeyUp","DialogActions_default","TaskModal","handleDateChange","date","onChangeNote","taskTitle","multiline","rowsMax","material_ui_pickers_esm","utils","DateFnsUtils","clearable","format","minDate","Date","taskNotes","taskDue","About","paragraph","TasksPage","selectedTaskListTitle","isModalTaskOpen","updatedTaskListId","updatedTaskId","isAbout","notification","handleModalClose","handleModalTaskOpen","handleModalTaskClose","listTaskLists","gapi","client","tasklists","list","maxResults","then","response","result","items","console","log","catch","taskListById","get","tasklist","taskById","arguments","showHidden","handleCUTaskList","updateTaskList","createNewTaskList","handleCUTaskListCancel","insert","newTask","showNotification","update","updatedTaskList","delete","handleCUTask","Object","keys","updateTask","createNewTask","handleCUTaskCancel","objectSpread","newTasks","toConsumableArray","updatedTask","filter","notifText","message","autoHideDuration","timer","clearTimeout","setTimeout","CssBaseline_default","AppBar_default","position","Toolbar_default","noWrap","handleSignoutClick","Drawer_default","classes","paper","anchor","components_TaskLists_TaskLists","components_Tasks_Tasks","components_About_About","Paper_default","padding","elevation","TaskListModal_TaskListModal","TaskModal_TaskModal","Snackbar_default","anchorOrigin","vertical","horizontal","Loader","googleUserHandler","googleUser","profile","getBasicProfile","user","getUserProfile","id_token","getAuthResponse","getId","name","getGivenName","family_name","getFamilyName","full_name","getName","avatar","getImageUrl","email","getEmail","App","loading","isAuthenticated","initClient","load","init","apiKey","discoveryDocs","clientId","scope","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","getUser","currentUser","signIn","signOut","addEventListener","components_Loader_Loader","TasksPage_TasksPage_TasksPage","containers_LoginPage_LoginPage","location","hostname","match","ReactDOM","render","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c185290.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./LoginButton.css\";\n\nconst LoginButton = ({ handleSignInClick }) => {\n  return (\n    <div className=\"login__button\" onClick={handleSignInClick}>\n      <span className=\"login__button_icon\" />\n      <span className=\"login__button_text\">Google</span>\n    </div>\n  );\n};\n\nexport default LoginButton;\n","import React from \"react\";\n\nimport LoginButton from \"../../components/LoginButton/LoginButton\";\n\nimport \"./LoginPage.css\";\n\nconst LoginPage = ({ handleSignInClick }) => {\n  return (\n    <div className=\"login__page\">\n      <h1>Your Google Tasks!</h1>\n      <div className=\"login__form\">\n        <h2>Please, Login In!</h2>\n        <LoginButton handleSignInClick={handleSignInClick} />\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React, { Component } from \"react\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ViewList from \"@material-ui/icons/ViewList\";\nimport Info from \"@material-ui/icons/Info\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { GithubCircle, CalendarCheck } from \"mdi-material-ui\";\n\nimport \"./TaskLists.css\";\n\nclass TaskLists extends Component {\n  state = {\n    anchorEl: null,\n    openedMenuIdOfTaskList: null\n  };\n\n  handleListTasksOfList = (id, title) => (event) => {\n    this.props.listTasksOfList(id, title);\n  };\n\n  handleMenuClick = (id) => (event) => {\n    this.setState({ anchorEl: event.currentTarget, openedMenuIdOfTaskList: id });\n  };\n\n  handleMenuClose = (event) => {\n    this.setState({ anchorEl: null, openedMenuIdOfTaskList: null });\n  };\n\n  handleDeleteTaskList = (event) => {\n    this.props.deleteTaskList(this.state.openedMenuIdOfTaskList);\n    this.handleMenuClose();\n  };\n\n  handleUpdateTaskList = (event) => {\n    this.props.handleUTaskList(this.state.openedMenuIdOfTaskList);\n    this.handleMenuClose();\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n\n    return (\n      <div>\n        <List subheader={<ListSubheader component=\"div\">Task Lists</ListSubheader>}>\n          {this.props.taskLists.map((taskList) => (\n            <ListItem\n              button\n              key={taskList.id}\n              onClick={this.handleListTasksOfList(taskList.id, taskList.title)}\n              style={{\n                backgroundColor:\n                  this.props.selectedTaskListId === taskList.id && \"rgba(0, 0, 0, 0.08)\"\n              }}\n            >\n              <ListItemIcon>\n                <ViewList />\n              </ListItemIcon>\n              <ListItemText primary={taskList.title} />\n\n              <ListItemSecondaryAction>\n                <IconButton\n                  aria-owns={anchorEl ? \"simple-menu\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenuClick(taskList.id)}\n                >\n                  <MoreVertIcon />\n                </IconButton>\n\n                <Menu\n                  id=\"simple-menu\"\n                  anchorEl={anchorEl}\n                  open={Boolean(anchorEl)}\n                  onClose={this.handleMenuClose}\n                >\n                  <MenuItem onClick={this.handleUpdateTaskList}>Update</MenuItem>\n                  <MenuItem onClick={this.handleDeleteTaskList}>Delete</MenuItem>\n                </Menu>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n\n          <ListItem button key={\"Create new list\"} onClick={this.props.handleModalOpen}>\n            <ListItemIcon>\n              <AddIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Create new list\"} />\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem button key={\"About\"} onClick={this.props.getAbout}>\n            <ListItemIcon>\n              <Info />\n            </ListItemIcon>\n            <ListItemText primary={\"About\"} />\n          </ListItem>\n          <ListItem\n            button\n            key={\"View Source on GitHub\"}\n            onClick={() => window.open(\"https://github.com/Kirill255/react-google-tasks\")}\n          >\n            <ListItemIcon>\n              <GithubCircle />\n            </ListItemIcon>\n            <ListItemText primary={\"View Source on GitHub\"} />\n          </ListItem>\n          <ListItem\n            button\n            key={\"Original Site\"}\n            onClick={() => window.open(\"https://mail.google.com/tasks/canvas?pli=1\")}\n          >\n            <ListItemIcon>\n              <CalendarCheck />\n            </ListItemIcon>\n            <ListItemText primary={\"Original Site\"} />\n          </ListItem>\n        </List>\n      </div>\n    );\n  }\n}\n\nexport default TaskLists;\n","import React, { Component } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Delete from \"@material-ui/icons/Delete\";\n\nimport \"./Task.css\";\n\nexport default class Task extends Component {\n  state = {\n    checked: [0]\n  };\n\n  handleToggle = (id, status) => () => {\n    const newStatus = status === \"completed\" ? \"needsAction\" : \"completed\";\n    this.props.handleTaskComplete(id, newStatus);\n  };\n\n  handleUpdateTask = (id) => () => {\n    this.props.handleUTask(id);\n  };\n\n  handleDeleteTask = (id) => () => {\n    this.props.deleteTask(id);\n  };\n\n  render() {\n    return (\n      <ListItem\n        className=\"task__item\"\n        dense\n        disableGutters\n        divider\n        style={{ textDecoration: this.props.status === \"completed\" ? \"line-through\" : null }}\n      >\n        <Checkbox\n          onChange={this.handleToggle(this.props.id, this.props.status)}\n          checked={this.props.status === \"completed\"}\n          tabIndex={-1}\n          disableRipple\n          disabled={this.props.isRequest}\n        />\n        <ListItemText disableTypography className=\"task__item_text\">\n          <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\n            {this.props.title}\n          </Typography>\n          {this.props.notes && (\n            <Typography gutterBottom color=\"textSecondary\">\n              {this.props.notes}\n            </Typography>\n          )}\n          {this.props.due && (\n            <Chip\n              icon={<DateRange />}\n              label={this.props.due}\n              className=\"task__item_chip\"\n              variant=\"outlined\"\n            />\n          )}\n        </ListItemText>\n        <ListItemSecondaryAction>\n          <IconButton onClick={this.handleUpdateTask(this.props.id)}>\n            <Edit />\n          </IconButton>\n          <IconButton onClick={this.handleDeleteTask(this.props.id)}>\n            <Delete />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleOutline from \"@material-ui/icons/AddCircleOutline\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Task from \"../Task/Task\";\n\nimport \"./Tasks.css\";\n\nclass Tasks extends Component {\n  render() {\n    return (\n      <div>\n        <Card className=\"tasks__card\" raised>\n          <CardHeader\n            title={this.props.title}\n            action={\n              <IconButton onClick={() => this.props.handleModalOpen()}>\n                <AddCircleOutline />\n              </IconButton>\n            }\n          />\n          {this.props.tasks.length ? (\n            <List className=\"tasks__list\">\n              {this.props.tasks.map((task) => (\n                <Task\n                  key={task.id}\n                  id={task.id}\n                  title={task.title}\n                  notes={task.notes ? task.notes : null}\n                  due={task.due ? task.due : null}\n                  status={task.status}\n                  handleUTask={this.props.handleUTask}\n                  deleteTask={this.props.deleteTask}\n                  handleTaskComplete={this.props.handleTaskComplete}\n                  isRequest={this.props.isRequest}\n                />\n              ))}\n            </List>\n          ) : (\n            <>\n              <CardContent>\n                <Typography align=\"center\" variant=\"h5\">\n                  No tasks of this list yet.\n                </Typography>\n              </CardContent>\n            </>\n          )}\n          <CardActions>\n            <Button\n              className=\"tasks__add-button\"\n              color=\"primary\"\n              onClick={() => this.props.handleModalOpen()}\n            >\n              <AddCircleOutline className=\"tasks__add-button_icon\" />\n              Create Task\n            </Button>\n          </CardActions>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Tasks;\n//  {/* \"No tasks of this list found\" */}\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default class TaskListModal extends Component {\n  state = { title: \"\" };\n\n  handleClose = () => {\n    this.props.onCancel();\n    this.setState({ title: \"\" });\n  };\n\n  handleSubmit = () => {\n    this.props.onSubmit(this.state.title);\n    this.setState({ title: \"\" });\n  };\n\n  handleKeyUp = (event) => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.handleSubmit();\n    }\n  };\n\n  onChangeTitle = (event) => {\n    this.setState({ title: event.target.value });\n  };\n\n  render() {\n    const { isModalOpen, isUpdate, taskListTitle } = this.props;\n    const value = isUpdate && !this.state.title ? taskListTitle : this.state.title;\n\n    return (\n      <div>\n        <Dialog open={isModalOpen} onClose={this.handleClose} fullWidth>\n          <DialogTitle id=\"form-dialog-title\">\n            {isUpdate ? `Update ${taskListTitle}` : \"Create new task list\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>Enter a title for the task list.</DialogContentText>\n            <TextField\n              autoComplete=\"off\"\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Task list title\"\n              type=\"text\"\n              value={value}\n              onChange={this.onChangeTitle}\n              onKeyUp={this.handleKeyUp}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              {isUpdate ? \"Update\" : \"Create\"}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"material-ui-pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport default class TaskModal extends Component {\n  state = {\n    title: \"\",\n    notes: \"\",\n    due: null\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    // проверяю я только title, остальные параметры необязательные\n    if (props.isUpdate) {\n      if (props.taskTitle && !state.title) {\n        return {\n          title: props.taskTitle,\n          notes: props.taskNotes || \"\",\n          due: props.taskDue || null\n        };\n      }\n    }\n\n    return null;\n  }\n\n  handleDateChange = (date) => {\n    this.setState({ due: date });\n  };\n\n  handleClose = () => {\n    this.props.onCancel();\n    this.setState({ title: \"\", notes: \"\", due: null });\n  };\n\n  handleSubmit = () => {\n    if (this.state.title) {\n      this.props.onSubmit(this.state);\n      this.setState({ title: \"\", notes: \"\", due: null });\n    }\n  };\n\n  handleKeyUp = (event) => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.handleSubmit();\n    }\n  };\n\n  onChangeTitle = (event) => {\n    this.setState({ title: event.target.value });\n  };\n\n  onChangeNote = (event) => {\n    this.setState({ notes: event.target.value });\n  };\n\n  render() {\n    const { isModalOpen, isUpdate } = this.props;\n\n    return (\n      <div>\n        <Dialog open={isModalOpen} onClose={this.handleClose} fullWidth>\n          <DialogTitle id=\"form-dialog-title\">\n            {isUpdate ? `Update ${this.props.taskTitle}` : \"Create new task\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>Enter a title for the task. It's required.</DialogContentText>\n            <TextField\n              autoComplete=\"off\"\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Title\"\n              type=\"text\"\n              value={this.state.title}\n              onChange={this.onChangeTitle}\n              onKeyUp={this.handleKeyUp}\n              fullWidth\n            />\n            <TextField\n              autoComplete=\"off\"\n              margin=\"dense\"\n              id=\"notes\"\n              label=\"Notes\"\n              type=\"text\"\n              value={this.state.notes}\n              onChange={this.onChangeNote}\n              fullWidth\n              multiline\n              rowsMax=\"4\"\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <DatePicker\n                margin=\"dense\"\n                label=\"Date\"\n                clearable\n                format=\"dd/MM/yyyy\"\n                minDate={new Date()}\n                value={this.state.due}\n                onChange={this.handleDateChange}\n              />\n            </MuiPickersUtilsProvider>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              {isUpdate ? \"Update\" : \"Create\"}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst About = () => {\n  return (\n    <div>\n      <Card className=\"tasks__card\" raised>\n        <CardHeader title=\"About\" />\n\n        <CardContent>\n          <Typography align=\"center\" paragraph>\n            Awesome Google Tasks is an alternative web client for Google Tasks.\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { Component } from \"react\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport TaskLists from \"../../components/TaskLists/TaskLists\";\nimport Tasks from \"../../components/Tasks/Tasks\";\nimport TaskListModal from \"../../components/TaskListModal/TaskListModal\";\nimport TaskModal from \"../../components/TaskModal/TaskModal\";\nimport About from \"../../components/About/About\";\n\nimport \"./TasksPage.css\";\n\nexport default class TasksPage extends Component {\n  state = {\n    selectedTaskListId: null,\n    selectedTaskListTitle: \"\",\n    taskLists: [],\n    tasks: [],\n    isModalOpen: false,\n    isModalTaskOpen: false,\n    taskListTitle: \"\",\n    taskTitle: \"\",\n    taskNotes: \"\",\n    taskDue: null,\n    updatedTaskListId: null,\n    updatedTaskId: null,\n    isRequest: false,\n    isAbout: false,\n    notification: null\n  };\n\n  componentDidMount() {\n    this.listTaskLists();\n  }\n\n  handleModalOpen = () => {\n    this.setState({ isModalOpen: true });\n  };\n\n  handleModalClose = () => {\n    this.setState({ isModalOpen: false });\n  };\n\n  handleModalTaskOpen = () => {\n    this.setState({ isModalTaskOpen: true });\n  };\n\n  handleModalTaskClose = () => {\n    this.setState({ isModalTaskOpen: false });\n  };\n\n  /*\n   ** All\n   */\n\n  listTaskLists = () => {\n    window.gapi.client.tasks.tasklists\n      .list({\n        maxResults: 10\n      })\n      .then((response) => {\n        const taskLists = response.result.items;\n\n        if (taskLists && taskLists.length > 0) {\n          this.setState({ taskLists });\n        } else {\n          console.log(\"No task lists found.\");\n        }\n      })\n      .catch(console.log);\n  };\n\n  taskListById = (id) => {\n    window.gapi.client.tasks.tasklists\n      .get({\n        tasklist: id\n      })\n      .then((response) => {\n        const taskList = response.result;\n        if (taskList && taskList.id) {\n          this.setState({\n            isModalOpen: true, // open modal after receiving the response\n            updatedTaskListId: taskList.id,\n            taskListTitle: taskList.title\n          });\n        } else {\n          console.log(\"No task lists found.\");\n        }\n      })\n      .catch(console.log);\n  };\n\n  taskById = (id) => {\n    window.gapi.client.tasks.tasks\n      .get({\n        tasklist: this.state.selectedTaskListId,\n        task: id\n      })\n      .then((response) => {\n        const task = response.result;\n        if (task && task.id) {\n          this.setState({\n            isModalTaskOpen: true, // open modal after receiving the response\n            updatedTaskId: task.id,\n            taskTitle: task.title,\n            taskNotes: task.notes || \"\",\n            taskDue: task.due || null\n          });\n        } else {\n          console.log(\"No task lists found.\");\n        }\n      })\n      .catch(console.log);\n  };\n\n  // ???????????????\n  listTasksOfList = (id, title = this.state.selectedTaskListTitle) => {\n    window.gapi.client.tasks.tasks\n      .list({ tasklist: id, showHidden: true })\n      .then((response) => {\n        const tasks = response.result.items;\n\n        if (tasks && tasks.length > 0) {\n          this.setState({\n            tasks,\n            selectedTaskListId: id,\n            selectedTaskListTitle: title,\n            isRequest: false,\n            isAbout: false\n          });\n        } else {\n          this.setState({\n            tasks: [],\n            selectedTaskListId: id,\n            selectedTaskListTitle: title,\n            isRequest: false\n          });\n          console.log(\"No tasks of this list found.\");\n        }\n      })\n      .catch(console.log);\n  };\n\n  /*\n   ** TaskList\n   */\n\n  // CU - create-update\n  handleCUTaskList = (title) => {\n    this.handleModalClose();\n    if (title) {\n      if (this.state.updatedTaskListId) {\n        this.updateTaskList(this.state.updatedTaskListId, title);\n      } else {\n        this.createNewTaskList(title);\n      }\n    }\n  };\n\n  handleCUTaskListCancel = () => {\n    this.handleModalClose();\n    this.setState({ taskListTitle: \"\", updatedTaskListId: null });\n  };\n\n  createNewTaskList = (title) => {\n    window.gapi.client.tasks.tasklists\n      .insert({ title })\n      .then((response) => {\n        const newTask = response.result;\n\n        if (newTask && newTask.id) {\n          this.showNotification(\"List created successfuly\");\n\n          this.listTaskLists();\n        } else {\n          console.log(\"Something went wrong.\");\n        }\n      })\n      .catch(console.log);\n  };\n\n  // U - update\n  handleUTaskList = (id) => {\n    // this.setState({ isModalOpen: true }); //it will be better to open the modal after receiving the response\n    this.taskListById(id);\n  };\n\n  updateTaskList = (id, title) => {\n    window.gapi.client.tasks.tasklists\n      .update({ tasklist: id, id, title })\n      .then((response) => {\n        this.setState({ taskListTitle: \"\", updatedTaskListId: null });\n        const updatedTaskList = response.result;\n\n        if (updatedTaskList && updatedTaskList.id) {\n          this.showNotification(\"List updated successfuly\");\n\n          this.listTaskLists();\n        } else {\n          console.log(\"Something went wrong.\");\n        }\n      })\n      .catch(console.log);\n  };\n\n  deleteTaskList = (id) => {\n    window.gapi.client.tasks.tasklists\n      .delete({ tasklist: id })\n      .then((response) => {\n        const result = response.result; // If successful, this method returns an empty response body.\n\n        if (!result) {\n          this.showNotification(\"List removed successfuly\");\n\n          this.listTaskLists();\n        } else {\n          console.log(\"Something went wrong.\");\n        }\n      })\n      .catch(console.log);\n  };\n\n  /*\n   ** Task\n   */\n\n  handleCUTask = (task) => {\n    this.handleModalTaskClose();\n    if (Object.keys(task).length) {\n      if (this.state.updatedTaskId) {\n        this.updateTask(this.state.updatedTaskId, task);\n      } else {\n        this.createNewTask(task);\n      }\n    }\n  };\n\n  handleCUTaskCancel = () => {\n    this.handleModalTaskClose();\n    this.setState({ taskTitle: \"\", taskNotes: \"\", taskDue: null, updatedTaskId: null });\n  };\n\n  createNewTask = (task) => {\n    window.gapi.client.tasks.tasks\n      .insert({ tasklist: this.state.selectedTaskListId, ...task })\n      .then((response) => {\n        const newTask = response.result;\n\n        if (newTask && newTask.id) {\n          this.showNotification(\"Task created successfuly\");\n\n          const newTasks = [newTask, ...this.state.tasks];\n          this.setState({ tasks: newTasks });\n        } else {\n          console.log(\"Something went wrong.\");\n        }\n      })\n      .catch(console.log);\n  };\n\n  handleUTask = (id) => {\n    this.taskById(id);\n  };\n\n  updateTask = (id, task) => {\n    this.setState({ taskTitle: \"\", taskNotes: \"\", taskDue: null, updatedTaskId: null }); // обнуляю перед запросом, иначе у меня приходят старые пропсы в TaskModal\n\n    window.gapi.client.tasks.tasks\n      .update({ tasklist: this.state.selectedTaskListId, task: id, id, ...task })\n      .then((response) => {\n        // this.setState({ taskTitle: \"\", taskNotes: \"\", taskDue: null, updatedTaskId: null });\n        const updatedTask = response.result;\n\n        if (updatedTask && updatedTask.id) {\n          this.showNotification(\"Task updated successfuly\");\n\n          this.listTasksOfList(this.state.selectedTaskListId);\n        } else {\n          console.log(\"Something went wrong.\");\n        }\n      })\n      .catch(console.log);\n  };\n\n  deleteTask = (id) => {\n    window.gapi.client.tasks.tasks\n      .delete({ tasklist: this.state.selectedTaskListId, task: id })\n      .then((response) => {\n        const result = response.result; // If successful, this method returns an empty response body.\n\n        if (!result) {\n          this.showNotification(\"Task removed successfuly\");\n\n          const newTasks = this.state.tasks.filter((task) => task.id !== id);\n          this.setState({ tasks: newTasks });\n        } else {\n          console.log(\"Something went wrong.\");\n        }\n      })\n      .catch(console.log);\n  };\n\n  handleTaskComplete = (id, status) => {\n    this.setState({ isRequest: true });\n\n    window.gapi.client.tasks.tasks\n      .update({ tasklist: this.state.selectedTaskListId, task: id, id, status })\n      .then((response) => {\n        // this.setState({ isRequest: false }); // перенёс в listTasksOfList\n        const updatedTask = response.result;\n\n        if (updatedTask && updatedTask.id) {\n          const notifText = status === \"completed\" ? \"completed\" : \"not completed\";\n          this.showNotification(`Task ${notifText}`);\n\n          this.listTasksOfList(this.state.selectedTaskListId);\n        } else {\n          console.log(\"Something went wrong.\");\n        }\n      })\n      .catch(console.log);\n  };\n\n  getAbout = () => {\n    this.setState({ isAbout: true, selectedTaskListId: null });\n  };\n\n  showNotification = (message, autoHideDuration = 3000) => {\n    if (this.timer) clearTimeout(this.timer);\n\n    this.setState({ notification: { message } }, () => {\n      this.timer = setTimeout(() => this.setState({ notification: null }), autoHideDuration);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"tasks__page\">\n        <CssBaseline />\n        <AppBar position=\"fixed\" className=\"tasks__app-bar\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap className=\"tasks__app-name\">\n              Google Tasks\n            </Typography>\n            <Button id=\"signout_button\" color=\"inherit\" onClick={this.props.handleSignoutClick}>\n              Sign Out\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className=\"tasks__drawer\"\n          variant=\"permanent\"\n          classes={{\n            paper: \"tasks__drawer-paper\"\n          }}\n          anchor=\"left\"\n        >\n          <div className=\"tasks__toolbar\" />\n          <Divider />\n\n          <TaskLists\n            taskLists={this.state.taskLists}\n            selectedTaskListId={this.state.selectedTaskListId}\n            listTasksOfList={this.listTasksOfList}\n            handleModalOpen={this.handleModalOpen}\n            handleUTaskList={this.handleUTaskList}\n            deleteTaskList={this.deleteTaskList}\n            getAbout={this.getAbout}\n          />\n        </Drawer>\n        <main className=\"tasks__content\">\n          <div className=\"tasks__toolbar\" />\n\n          {this.state.selectedTaskListId ? (\n            <Tasks\n              tasks={this.state.tasks}\n              title={this.state.selectedTaskListTitle}\n              handleModalOpen={this.handleModalTaskOpen}\n              handleUTask={this.handleUTask}\n              deleteTask={this.deleteTask}\n              handleTaskComplete={this.handleTaskComplete}\n              isRequest={this.state.isRequest}\n            />\n          ) : this.state.isAbout ? (\n            <About />\n          ) : (\n            <Paper style={{ padding: \"8px\" }} elevation={1}>\n              <Typography variant=\"h5\" component=\"h3\">\n                Select task list or create new.\n              </Typography>\n            </Paper>\n          )}\n        </main>\n\n        <TaskListModal\n          isModalOpen={this.state.isModalOpen}\n          isUpdate={Boolean(this.state.updatedTaskListId)}\n          taskListTitle={Boolean(this.state.updatedTaskListId) ? this.state.taskListTitle : \"\"}\n          onCancel={this.handleCUTaskListCancel}\n          onSubmit={this.handleCUTaskList}\n        />\n\n        <TaskModal\n          isModalOpen={this.state.isModalTaskOpen}\n          isUpdate={Boolean(this.state.updatedTaskId)}\n          taskTitle={Boolean(this.state.updatedTaskId) ? this.state.taskTitle : \"\"}\n          taskNotes={Boolean(this.state.updatedTaskId) ? this.state.taskNotes : \"\"}\n          taskDue={Boolean(this.state.updatedTaskId) ? this.state.taskDue : null}\n          onCancel={this.handleCUTaskCancel}\n          onSubmit={this.handleCUTask}\n        />\n\n        {this.state.notification && (\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"left\"\n            }}\n            open={true}\n            message={this.state.notification.message}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./Loader.css\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <h2>Loading ...</h2>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { Component } from \"react\";\n\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport TasksPage from \"../TasksPage/TasksPage\";\nimport Loader from \"../../components/Loader/Loader\";\n\nimport \"./App.css\";\n\nconst googleUserHandler = (googleUser) => {\n  const profile = googleUser.getBasicProfile();\n  const user = getUserProfile(profile);\n  const id_token = googleUser.getAuthResponse().id_token;\n  user.id_token = id_token;\n\n  return user;\n};\n\nconst getUserProfile = (profile) => {\n  return {\n    id: profile.getId(),\n    name: profile.getGivenName(),\n    family_name: profile.getFamilyName(),\n    full_name: profile.getName(),\n    avatar: profile.getImageUrl(),\n    email: profile.getEmail()\n  };\n};\n\nclass App extends Component {\n  state = {\n    loading: false,\n    isAuthenticated: false,\n    user: null\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"google-loaded\", this.initClient);\n    window.gapi && this.initClient();\n  }\n\n  initClient = () => {\n    // console.log(\"-- in initClient --\");\n    this.setState({ loading: true });\n\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          apiKey: \"AIzaSyDKvF1KEk7XllLfpfhbgv1MmcxaSVgWyeA\",\n          discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/tasks/v1/rest\"],\n          clientId: \"365243747034-8bogar38jdern567eimmvs48qqpc7ebi.apps.googleusercontent.com\",\n          scope: \"https://www.googleapis.com/auth/tasks\"\n        })\n        .then(() => {\n          // Assign auth2 variable\n          this.auth2 = window.gapi.auth2.getAuthInstance();\n          this.setState({ loading: false });\n          // Listen for sign-in state changes.\n          this.auth2.isSignedIn.listen(this.updateSigninStatus);\n\n          // Handle the initial sign-in state.\n          this.updateSigninStatus(this.auth2.isSignedIn.get());\n        })\n        .catch(console.log);\n    });\n  };\n\n  updateSigninStatus = (isSignedIn) => {\n    if (isSignedIn) {\n      this.getUser();\n    } else {\n      this.setState({ user: null, isAuthenticated: false });\n    }\n  };\n\n  getUser = () => {\n    const user = googleUserHandler(this.auth2.currentUser.get());\n    this.setState({ user, isAuthenticated: true });\n  };\n\n  handleSignInClick = () => {\n    this.auth2.signIn().catch(console.log);\n  };\n\n  handleSignoutClick = () => {\n    this.auth2.signOut().catch(console.log);\n  };\n\n  render() {\n    if (this.state.loading) {\n      return <Loader />;\n    }\n\n    return (\n      <div className=\"App\">\n        {!this.state.isAuthenticated ? (\n          <LoginPage handleSignInClick={this.handleSignInClick} />\n        ) : (\n          <TasksPage handleSignoutClick={this.handleSignoutClick} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}